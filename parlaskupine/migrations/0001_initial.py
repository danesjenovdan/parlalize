# Generated by Django 1.11 on 2019-10-18 15:02
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import jsonfield.fields
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('parlaposlanci', '0001_initial'),
        ('parlaseje', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Compass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='creation time')),
                ('updated_at', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='last modification time')),
                ('calculated_from', models.DateField(blank=True, help_text='date of first ballot entered', null=True, verbose_name='date of first ballot entered')),
                ('created_for', models.DateField(blank=True, help_text='date of activity', null=True, verbose_name='date of analize')),
                ('data', jsonfield.fields.JSONField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CutVotes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='creation time')),
                ('updated_at', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='last modification time')),
                ('created_for', models.DateField(blank=True, help_text='date of analize', null=True, verbose_name='date of activity')),
                ('this_for', models.FloatField(default=0.0)),
                ('this_against', models.FloatField(default=0.0)),
                ('this_abstain', models.FloatField(default=0.0)),
                ('this_absent', models.FloatField(default=0.0)),
                ('coalition_for', models.FloatField(default=0.0)),
                ('coalition_against', models.FloatField(default=0.0)),
                ('coalition_abstain', models.FloatField(default=0.0)),
                ('coalition_absent', models.FloatField(default=0.0)),
                ('coalition_for_max', models.FloatField(default=0.0)),
                ('coalition_against_max', models.FloatField(default=0.0)),
                ('coalition_abstain_max', models.FloatField(default=0.0)),
                ('coalition_absent_max', models.FloatField(default=0.0)),
                ('coalition_for_max_org', models.CharField(max_length=500)),
                ('coalition_against_max_org', models.CharField(max_length=500)),
                ('coalition_abstain_max_org', models.CharField(max_length=500)),
                ('coalition_absent_max_org', models.CharField(max_length=500)),
                ('opposition_for', models.FloatField(default=0.0)),
                ('opposition_against', models.FloatField(default=0.0)),
                ('opposition_abstain', models.FloatField(default=0.0)),
                ('opposition_absent', models.FloatField(default=0.0)),
                ('opposition_for_max', models.FloatField(default=0.0)),
                ('opposition_against_max', models.FloatField(default=0.0)),
                ('opposition_abstain_max', models.FloatField(default=0.0)),
                ('opposition_absent_max', models.FloatField(default=0.0)),
                ('opposition_for_max_org', models.CharField(max_length=500)),
                ('opposition_against_max_org', models.CharField(max_length=500)),
                ('opposition_abstain_max_org', models.CharField(max_length=500)),
                ('opposition_absent_max_org', models.CharField(max_length=500)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DeviationInOrganization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='creation time')),
                ('updated_at', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='last modification time')),
                ('data', jsonfield.fields.JSONField(blank=True, null=True)),
                ('created_for', models.DateField(blank=True, help_text='date of activity', null=True, verbose_name='date of analize')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IntraDisunion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='creation time')),
                ('updated_at', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='last modification time')),
                ('maximum', models.CharField(blank=True, help_text='Maximum of organization disunion.', max_length=128, null=True, verbose_name='Maximum')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LessMatchingThem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='creation time')),
                ('updated_at', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='last modification time')),
                ('created_for', models.DateField(blank=True, help_text='date of activity', null=True, verbose_name='date of analize')),
                ('votes1', models.FloatField(blank=True, help_text='MatchingThem', null=True, verbose_name='MatchingThem1')),
                ('votes2', models.FloatField(blank=True, help_text='MatchingThem', null=True, verbose_name='MatchingThem2')),
                ('votes3', models.FloatField(blank=True, help_text='MatchingThem', null=True, verbose_name='MatchingThem3')),
                ('votes4', models.FloatField(blank=True, help_text='MatchingThem', null=True, verbose_name='MatchingThem4')),
                ('votes5', models.FloatField(blank=True, help_text='MatchingThem', null=True, verbose_name='MatchingThem5')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MostMatchingThem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='creation time')),
                ('updated_at', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='last modification time')),
                ('created_for', models.DateField(blank=True, help_text='date of analize', null=True, verbose_name='date of analize')),
                ('votes1', models.FloatField(blank=True, help_text='MatchingThem', null=True, verbose_name='MatchingThem1')),
                ('votes2', models.FloatField(blank=True, help_text='MatchingThem', null=True, verbose_name='MatchingThem2')),
                ('votes3', models.FloatField(blank=True, help_text='MatchingThem', null=True, verbose_name='MatchingThem3')),
                ('votes4', models.FloatField(blank=True, help_text='MatchingThem', null=True, verbose_name='MatchingThem4')),
                ('votes5', models.FloatField(blank=True, help_text='MatchingThem', null=True, verbose_name='MatchingThem5')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MPOfPg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='creation time')),
                ('updated_at', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='last modification time')),
                ('id_parladata', models.IntegerField(blank=True, help_text='id parladata', null=True, verbose_name='parladata id')),
                ('MPs', jsonfield.fields.JSONField(blank=True, null=True)),
                ('created_for', models.DateField(blank=True, help_text='date of analize', null=True, verbose_name='date of activity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NumberOfQuestions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='creation time')),
                ('updated_at', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='last modification time')),
                ('created_for', models.DateField(blank=True, help_text='date of analize', null=True, verbose_name='date of activity')),
                ('score', models.FloatField(blank=True, help_text='MP score', null=True)),
                ('average', models.FloatField(blank=True, help_text='Average score', null=True)),
                ('maximum', models.FloatField(blank=True, help_text='Maximum score', null=True)),
                ('maxOrgs', jsonfield.fields.JSONField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='creation time')),
                ('updated_at', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='last modification time')),
                ('name', models.TextField(help_text='A primary name, e.g. a legally recognized name', verbose_name='name')),
                ('id_parladata', models.IntegerField(blank=True, db_index=True, help_text='id parladata', null=True, verbose_name='parladata id')),
                ('classification', models.TextField(blank=True, help_text='Organization calssification.', null=True, verbose_name='Classification')),
                ('has_voters', models.BooleanField(default=False, help_text='Has organization voters?', verbose_name='has voters')),
                ('acronym', models.CharField(blank=True, help_text='Organization acronym', max_length=128, null=True, verbose_name='acronym')),
                ('is_coalition', models.BooleanField(default=False, verbose_name='coalition')),
                ('name_parser', models.CharField(blank=True, help_text=b'Name for parser.', max_length=1024, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PercentOFAttendedSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='creation time')),
                ('updated_at', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='last modification time')),
                ('created_for', models.DateField(blank=True, help_text='date of analize', null=True, verbose_name='date of activity')),
                ('organization_value_sessions', models.FloatField(blank=True, help_text='Presence of this PG', null=True, verbose_name='Presence of this PG')),
                ('maxPG_sessions', jsonfield.fields.JSONField(blank=True, help_text='PG who has max prfesence of sessions', null=True)),
                ('average_sessions', models.FloatField(blank=True, help_text='Average of PG attended sessions', null=True, verbose_name='average')),
                ('maximum_sessions', models.FloatField(blank=True, help_text='Max of PG attended sessions', null=True, verbose_name='max')),
                ('organization_value_votes', models.FloatField(blank=True, help_text='Presence of this PG', null=True, verbose_name='Presence of this PG')),
                ('maxPG_votes', jsonfield.fields.JSONField(blank=True, help_text='PG who has max prfesence of sessions', null=True)),
                ('average_votes', models.FloatField(blank=True, help_text='Average of PG attended sessions', null=True, verbose_name='average')),
                ('maximum_votes', models.FloatField(blank=True, help_text='Max of PG attended sessions', null=True, verbose_name='max')),
                ('organization', models.ForeignKey(blank=True, help_text='PG', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='childrenPG', to='parlaskupine.Organization')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PGMismatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='creation time')),
                ('updated_at', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='last modification time')),
                ('data', jsonfield.fields.JSONField(blank=True, null=True)),
                ('created_for', models.DateField(blank=True, help_text='date of activity', null=True, verbose_name='date of analize')),
                ('organization', models.ForeignKey(blank=True, help_text='PG', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mismatches', to='parlaskupine.Organization')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PGStatic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='creation time')),
                ('updated_at', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='last modification time')),
                ('created_for', models.DateField(blank=True, help_text='date of analize', null=True, verbose_name='date of activity')),
                ('viceOfPG', jsonfield.fields.JSONField(blank=True, null=True)),
                ('numberOfSeats', models.IntegerField(blank=True, help_text='Number of seats in parlament of PG', null=True)),
                ('allVoters', models.IntegerField(blank=True, help_text='Number of voters', null=True)),
                ('facebook', models.TextField(blank=True, default=None, help_text='Facebook profile URL', null=True)),
                ('twitter', models.TextField(blank=True, default=None, help_text='Twitter profile URL', null=True)),
                ('email', models.TextField(blank=True, default=None, help_text='email profile URL', null=True)),
                ('headOfPG', models.ForeignKey(help_text='Head of MP', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PGStaticH', to='parlaposlanci.Person')),
                ('organization', models.ForeignKey(help_text='Organization foreign key relationship', on_delete=django.db.models.deletion.CASCADE, to='parlaskupine.Organization')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PresenceThroughTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='creation time')),
                ('updated_at', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='last modification time')),
                ('created_for', models.DateField(blank=True, help_text='date of analize', null=True, verbose_name='date of activity')),
                ('data', jsonfield.fields.JSONField(blank=True, null=True)),
                ('organization', models.ForeignKey(blank=True, help_text='Org', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='presenceThroughTime', to='parlaskupine.Organization')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StyleScores',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='creation time')),
                ('updated_at', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='last modification time')),
                ('created_for', models.DateField(blank=True, help_text='date of analize', null=True, verbose_name='date of activity')),
                ('problematicno', models.FloatField(blank=True, help_text='Problematicno score of this PG', null=True, verbose_name='Problematicno style score of this PG')),
                ('privzdignjeno', models.FloatField(blank=True, help_text='Privzdignjeno style score of this PG', null=True, verbose_name='Privzdignjeno style score of this PG')),
                ('preprosto', models.FloatField(blank=True, help_text='Preprosto style score of this PG', null=True, verbose_name='Preprosto style score of this PG')),
                ('problematicno_average', models.FloatField(blank=True, help_text='Problematicno average style score', null=True, verbose_name='Problematicno average style score')),
                ('privzdignjeno_average', models.FloatField(blank=True, help_text='Privzdignjeno average style score', null=True, verbose_name='Privzdignjeno average style score')),
                ('preprosto_average', models.FloatField(blank=True, help_text='Preprosto average style score', null=True, verbose_name='Preprosto average style score')),
                ('organization', models.ForeignKey(blank=True, help_text='Org', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='styleScores', to='parlaskupine.Organization')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tfidf',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='creation time')),
                ('updated_at', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='last modification time')),
                ('created_for', models.DateField(blank=True, help_text='date of analize', null=True, verbose_name='date of activity')),
                ('is_visible', models.BooleanField(default=True, verbose_name='is visible')),
                ('data', jsonfield.fields.JSONField(blank=True, null=True)),
                ('organization', models.ForeignKey(blank=True, help_text='Org', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tfidf', to='parlaskupine.Organization')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VocabularySize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='creation time')),
                ('updated_at', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='last modification time')),
                ('created_for', models.DateField(blank=True, help_text='date of analize', null=True, verbose_name='date of activity')),
                ('score', models.FloatField(blank=True, help_text='Vacabularty size of this Org', null=True, verbose_name='Vacabularty size of this Org')),
                ('average', models.FloatField(blank=True, help_text='Vacabularty size of Org', null=True, verbose_name='average')),
                ('maximum', models.FloatField(blank=True, help_text='Max of Org vacabularty size ', null=True, verbose_name='max')),
                ('maxOrg', models.ForeignKey(blank=True, help_text='Organization which has max vacabularty size', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='childrenVacSiz', to='parlaskupine.Organization')),
                ('organization', models.ForeignKey(blank=True, help_text='Org', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vocabularySizes', to='parlaskupine.Organization')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkingBodies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='creation time')),
                ('updated_at', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='last modification time')),
                ('created_for', models.DateField(blank=True, help_text='date of analize', null=True, verbose_name='date of activity')),
                ('vice_president', jsonfield.fields.JSONField()),
                ('members', jsonfield.fields.JSONField()),
                ('viceMember', jsonfield.fields.JSONField()),
                ('coal_ratio', models.FloatField()),
                ('oppo_ratio', models.FloatField()),
                ('seats', jsonfield.fields.JSONField()),
                ('sessions', jsonfield.fields.JSONField()),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parlaskupine.Organization')),
                ('president', models.ForeignKey(blank=True, help_text='President', null=True, on_delete=django.db.models.deletion.CASCADE, to='parlaposlanci.Person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='numberofquestions',
            name='organization',
            field=models.ForeignKey(blank=True, help_text='Org', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='numOfQuestions', to='parlaskupine.Organization'),
        ),
        migrations.AddField(
            model_name='mpofpg',
            name='organization',
            field=models.ForeignKey(blank=True, help_text='PG', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='MPOfPg_1', to='parlaskupine.Organization'),
        ),
        migrations.AddField(
            model_name='mostmatchingthem',
            name='organization',
            field=models.ForeignKey(blank=True, help_text='PG', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='childrenMMT', to='parlaskupine.Organization'),
        ),
        migrations.AddField(
            model_name='mostmatchingthem',
            name='person1',
            field=models.ForeignKey(blank=True, help_text='MP1', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='childrenMMT1', to='parlaposlanci.Person'),
        ),
        migrations.AddField(
            model_name='mostmatchingthem',
            name='person2',
            field=models.ForeignKey(blank=True, help_text='MP2', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='childrenMMT2', to='parlaposlanci.Person'),
        ),
        migrations.AddField(
            model_name='mostmatchingthem',
            name='person3',
            field=models.ForeignKey(blank=True, help_text='MP3', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='childrenMMT3', to='parlaposlanci.Person'),
        ),
        migrations.AddField(
            model_name='mostmatchingthem',
            name='person4',
            field=models.ForeignKey(blank=True, help_text='MP4', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='childrenMMT4', to='parlaposlanci.Person'),
        ),
        migrations.AddField(
            model_name='mostmatchingthem',
            name='person5',
            field=models.ForeignKey(blank=True, help_text='MP5', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='childrenMMT5', to='parlaposlanci.Person'),
        ),
        migrations.AddField(
            model_name='lessmatchingthem',
            name='organization',
            field=models.ForeignKey(blank=True, help_text='PG', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='childrenLMT', to='parlaskupine.Organization'),
        ),
        migrations.AddField(
            model_name='lessmatchingthem',
            name='person1',
            field=models.ForeignKey(blank=True, help_text='MP1', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='childrenLMT1', to='parlaposlanci.Person'),
        ),
        migrations.AddField(
            model_name='lessmatchingthem',
            name='person2',
            field=models.ForeignKey(blank=True, help_text='MP2', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='childrenLMT2', to='parlaposlanci.Person'),
        ),
        migrations.AddField(
            model_name='lessmatchingthem',
            name='person3',
            field=models.ForeignKey(blank=True, help_text='MP3', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='childrenLMT3', to='parlaposlanci.Person'),
        ),
        migrations.AddField(
            model_name='lessmatchingthem',
            name='person4',
            field=models.ForeignKey(blank=True, help_text='MP4', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='childrenLMT4', to='parlaposlanci.Person'),
        ),
        migrations.AddField(
            model_name='lessmatchingthem',
            name='person5',
            field=models.ForeignKey(blank=True, help_text='MP5', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='childrenLMT5', to='parlaposlanci.Person'),
        ),
        migrations.AddField(
            model_name='intradisunion',
            name='organization',
            field=models.ForeignKey(blank=True, help_text='Org', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='intraDisunion', to='parlaskupine.Organization'),
        ),
        migrations.AddField(
            model_name='intradisunion',
            name='vote',
            field=models.ForeignKey(blank=True, help_text='Vote', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vote_intradisunion', to='parlaseje.Vote'),
        ),
        migrations.AddField(
            model_name='deviationinorganization',
            name='organization',
            field=models.ForeignKey(blank=True, help_text='PG', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='childrenD', to='parlaskupine.Organization'),
        ),
        migrations.AddField(
            model_name='cutvotes',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parlaskupine.Organization'),
        ),
        migrations.AddField(
            model_name='compass',
            name='organization',
            field=models.ForeignKey(blank=True, help_text='Org', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Compass', to='parlaskupine.Organization'),
        ),
    ]
